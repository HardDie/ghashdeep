# This file contains all available configuration options
# with their default values.

# options for analysis running
run:
  # default concurrency is an available CPU number
  concurrency: 4

  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 10m

  # include test files or not, default is true
  tests: true

  # list of build tags, all linters use it. Default is empty list.
  build-tags: [ ]

  # Allow multiple parallel golangci-lint instances running.
  # If false (default) - golangci-lint acquires file lock on start.
  allow-parallel-runners: false

issues:
  # make issues output unique by line, default is true
  uniq-by-line: true

  # which files to skip: they will be analyzed, but issues from them
  # won't be reported. Default value is empty list, but there is
  # no need to include all autogenerated files, we confidently recognize
  # autogenerated files. If it's not please let us know.
  # "/" will be replaced by current OS file path separator to properly work
  # on Windows.
  exclude-files:
    - ".*\\._mock\\.go$"
    - ".*\\.pb\\.go$"

  # which dirs to skip: issues from them won't be reported;
  # can use regexp here: generated.*, regexp is applied on full path;
  # default value is empty list, but default dirs are skipped independently
  # of this option's value (see skip-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work
  # on Windows.
  exclude-dirs:
    - gen
  exclude:
    - "SA1019:" # Deprecation warning
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - forbidigo
    - path: _test\.go
      text: "G115:" # Possible overflow
    - path: _test\.go
      text: "G404:" # Weak randomizer
    - path: internal/api/v1 # because it contains obsolete swagger comments
      text: "line-length-limit:"

# output configuration options
output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
  # default is "colored-line-number"
  formats:
    - format: colored-line-number

  # print lines of code with issue, default is true
  print-issued-lines: true

  # print linter name in the end of issue text, default is true
  print-linter-name: true

  # add a prefix to the output file references; default is no prefix
  path-prefix: ""

  # sorts results by: filepath, line and column
  sort-results: false


# all available settings of specific linters
linters-settings:

  errcheck:
    # report about not checking of errors in type assertions: `a := b.(MyStruct)`;
    # default is false: such cases aren't reported by default.
    check-type-assertions: false

    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`;
    # default is false: such cases aren't reported by default.
    check-blank: false

    # list of functions to exclude from checking, where each entry is a single function to exclude.
    # see https://github.com/kisielk/errcheck#excluding-functions for details
    exclude-functions:
      - io/ioutil.ReadFile
      - io.Copy(*bytes.Buffer)
      - io.Copy(os.Stdout)

  gofmt:
    # simplify code: gofmt with `-s` option, true by default
    simplify: true
    rewrite-rules:
      - pattern: 'interface{}'
        replacement: 'any'

  gci:
    skip-generated: true
    custom-order: true
    sections:
      - standard # Standard section: captures all standard packages.
      - default # Default section: contains all imports that could not be matched to another section type.
      - prefix(github.com/HardDie) # Custom section: groups all imports with the specified Prefix.
      - prefix(github.com/HardDie/ghashdeep) # Custom section: prefix for current project

  goimports:
    # put imports beginning with prefix after 3rd-party packages;
    # it's a comma-separated list of prefixes
    local-prefixes: github.com/HardDie

  lll:
    line-length: 120

  revive:
    # see https://github.com/mgechev/revive#available-rules for details.
    rules:
      - name: context-keys-type
      - name: time-equal
      - name: time-naming
      - name: var-declaration
      - name: unexported-return
        disabled: true
      - name: errorf
      - name: blank-imports
      - name: context-as-argument
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: exported
      - name: if-return
        disabled: true
      - name: increment-decrement
        disabled: true
      # TODO: разобраться с  don't use an underscore in package name
      - name: var-naming
        disabled: true
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: indent-error-flow
        disabled: true
      - name: argument-limit
        arguments:
          - 50
      - name: cyclomatic
        disabled: true
      - name: max-public-structs
        disabled: true
      - name: file-header
        disabled: true
      - name: empty-block
      - name: superfluous-else
      #- name: confusing-naming
      - name: get-return
        disabled: true
      - name: modifies-parameter
      - name: deep-exit
        disabled: true
      - name: unused-parameter
      - name: unreachable-code
      - name: add-constant
        disabled: true
        arguments:
          - maxLitCount: "3"
      - name: flag-parameter
        disabled: true
      - name: unnecessary-stmt
        disabled: true
      - name: struct-tag
      - name: modifies-value-receiver
      - name: constant-logical-expr
      - name: bool-literal-in-expr
      - name: redefines-builtin-id
      - name: function-result-limit
        arguments:
          - 3
      - name: imports-blocklist
      - name: range-val-in-closure
      - name: range-val-address
      - name: waitgroup-by-value
      - name: atomic
      - name: empty-lines
        disabled: true
      - name: line-length-limit
        arguments:
          - 180
      - name: call-to-gc
      - name: duplicated-imports
      - name: import-shadowing
      - name: bare-return
      - name: unused-receiver
        disabled: true
      - name: unhandled-error
        arguments:
          - "fmt.Printf"
      - name: cognitive-complexity
        disabled: true
      - name: string-of-int
      - name: string-format
      - name: early-return
        disabled: true
      - name: redefines-builtin-id
      - name: identical-branches
      - name: defer
      - name: unexported-naming
      - name: function-length
        arguments:
          - 150
          - 0
      - name: nested-structs
        disabled: true
      - name: useless-break
        disabled: true
      - name: comment-spacings
      - name: use-any
      - name: redundant-import-alias
        disabled: true
      - name: optimize-operands-order
      - name: enforce-slice-style
      - name: enforce-repeated-arg-type-style
      - name: enforce-map-style
      - name: unconditional-recursion
      - name: confusing-results
        disabled: true

  govet:
    enable:
      - appends
      - asmdecl
      - assign
      - atomic
      - atomicalign
      - bools
      - buildtag
      - cgocall
      - composites
      - copylocks
      - deepequalerrors
      - defers
      - directive
      - errorsas
      - findcall
      - framepointer
      - httpresponse
      - ifaceassert
      - loopclosure
      - lostcancel
      - nilfunc
      - nilness
      - printf
      - reflectvaluecompare
      - shift
      - sigchanyzer
      - slog
      - sortslice
      - stdmethods
      - stringintconv
      - structtag
      - testinggoroutine
      - tests
      - unmarshal
      - unreachable
      - unsafeptr
      - unusedresult
      - unusedwrite

  gocognit:
    # Minimal code complexity to report
    # Default: 30 (but we recommend 10-20)
    min-complexity: 20
  nakedret:
    # Make an issue if func has more lines of code than this setting, and it has naked returns.
    # Default: 30
    max-func-lines: 5
  nestif:
    min-complexity: 20
  gocritic:
    enable-all: true
    disabled-checks:
      - wrapperFunc
      - hugeParam
      - sloppyReassign
      - unnamedResult
      - unnecessaryBlock
    settings:
      rangeValCopy:
        # Size in bytes that makes the warning trigger.
        # Default: 128
        sizeThreshold: 512

  misspell:
    locale: US

  nolintlint:
    require-explanation: true
    require-specific: false

linters:
  enable-all: false
  disable: []
  fast: false
  disable-all: true
  enable:
    - errcheck
    - gosimple
    - ineffassign
    - staticcheck
    - typecheck
    - unused
    # non-default
    - asciicheck
    - bidichk
    - bodyclose
    #- dupl
    - goconst
    #- godot
    - gofmt
    - gosec
    - govet
    #- lll
    - unconvert
    - makezero
    - nilerr
    - noctx
    - rowserrcheck
    - sqlclosecheck
    - misspell
    - goimports
    - gocritic
    - revive
    #- gocognit
    - nakedret
    - gci
    - gofumpt
    - wastedassign
    - usestdlibvars
    - unparam
    - reassign
    - promlinter
    - predeclared
    - prealloc
    - nosprintfhostport
    - nestif
    - mirror
    - nolintlint
    #- forbidigo
